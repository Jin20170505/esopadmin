<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.business.product.archive.mapper.BusinessProductMapper">
    
	<sql id="businessProductColumns">
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.id AS "id",
		a.type_id AS "type.id",
		a.cinvaddcode as "cinvaddcode",
		a.code AS "code",
		a.name AS "name",
		a.specification AS "specification",
		a.unit AS "unit",
		a.daynum as "daynum",
		a.remarks AS "remarks",
		a.sccall as "sccall",
		b.name AS "type.name"
	</sql>
	
	<sql id="businessProductJoins">
			LEFT JOIN business_product_type b ON b.id = a.type_id
	</sql>
	
    
	<select id="get" resultType="BusinessProduct" >
		SELECT 
			<include refid="businessProductColumns"/>
		FROM business_product a
		<include refid="businessProductJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BusinessProduct" >
		SELECT 
			<include refid="businessProductColumns"/>
		FROM business_product a
		<include refid="businessProductJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
                    <if test="type != null  and type.id != null and type.id != ''">
                        AND (b.id = #{type.id} OR b.parent_ids LIKE
                        <if test="_databaseId == 'postgre'">'%,'||#{type.id}||',%')</if>
                        <if test="_databaseId == 'oracle'">'%,'||#{type.id}||',%')</if>
                        <if test="_databaseId == 'mysql'">CONCAT('%,', #{type.id}, ',%'))</if>
                        <if test="_databaseId == 'mssql'">'%'+#{type.id}+'%')</if>
                    </if>
			<if test="code != null and code != ''">
				AND a.code = #{code}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{name}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BusinessProduct" >
		SELECT 
			<include refid="businessProductColumns"/>
		FROM business_product a
		<include refid="businessProductJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO business_product(
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			id,
			type_id,
			code,
		    cinvaddcode,
			name,
			specification,
			unit,
			daynum,
			sccall,
			remarks
		) VALUES
		<foreach collection="list" separator="," item="item">
			(
				#{item.createBy.id},
				#{item.createDate},
				#{item.updateBy.id},
				#{item.updateDate},
				#{item.delFlag},
				#{item.id},
				#{item.type.id},
				#{item.code},
				#{item.cinvaddcode},
				#{item.name},
				#{item.specification},
				#{item.unit},
			 	#{item.daynum},
				'0',
				#{item.remarks}
			)
		</foreach>
		on duplicate key update
		id = values(id),
		update_date= VALUES(update_date),
		code=VALUES(code),
		type_id=VALUES(type_id),
		cinvaddcode=VALUES(cinvaddcode),
		name=VALUES(name),
		specification=VALUES(specification),
		unit=VALUES(unit),
		daynum=values(daynum),
		remarks=VALUES(remarks)
	</insert>
	<insert id="insert">
		INSERT INTO business_product(
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			id,
			type_id,
			code,cinvaddcode,
			name,
			specification,
			unit,sccall,
			remarks
		) VALUES (
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{id},
			#{type.id},
			#{code},#{cinvaddcode},
			#{name},
			#{specification},
			#{unit},#{sccall},
			#{remarks}
		)

	</insert>
	
	<update id="update">
		UPDATE business_product SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			type_id = #{type.id},
			code = #{code},cinvaddcode = #{cinvaddcode},
			name = #{name},
			specification = #{specification},
			unit = #{unit},
			sccall = #{sccall},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM business_product
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE type_id = #{type.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE business_product SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE type_id = #{type.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BusinessProduct" statementType="STATEMENT">
		select * FROM business_product  where ${propertyName} = '${value}'
	</select>
	
</mapper>