<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.base.classgroup.mapper.BaseClassGroupMapper">
    
	<sql id="baseClassGroupColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.code AS "code",
		a.name AS "name",
		a.leader_id AS "leader.id",
		a.leader_code AS "leadercode",
		a.factory_id AS "factory.id",
		a.workshop_id AS "workshop.id",
		a.productline_id AS "line.id",
		a.remarks AS "remarks",
				
				
				
				
				
				
				
				
		leader.name AS "leader.name",
				
				
		factory.name AS "factory.name",
				
		workshop.name AS "workshop.name",
				
		line.name AS "line.name"
	</sql>
	
	<sql id="baseClassGroupJoins">
		
		LEFT JOIN sys_user leader ON leader.id = a.leader_id
		LEFT JOIN base_factory factory ON factory.id = a.factory_id
		LEFT JOIN base_workshop workshop ON workshop.id = a.workshop_id
		LEFT JOIN base_productionline line ON line.id = a.productline_id
	</sql>
	
    
	<select id="get" resultType="BaseClassGroup" >
		SELECT 
			<include refid="baseClassGroupColumns"/>
		FROM base_class_group a
		<include refid="baseClassGroupJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BaseClassGroup" >
		SELECT 
			<include refid="baseClassGroupColumns"/>
		FROM base_class_group a
		<include refid="baseClassGroupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="code != null and code != ''">
				AND a.code LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{code}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{code}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{code}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{code},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{name}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="leader != null and leader.id != null and leader.id != ''">
				AND a.leader_id = #{leader.id}
			</if>
			<if test="factory != null and factory.id != null and factory.id != ''">
				AND a.factory_id = #{factory.id}
			</if>
			<if test="workshop != null and workshop.id != null and workshop.id != ''">
				AND a.workshop_id = #{workshop.id}
			</if>
			<if test="line != null and line.id != null and line.id != ''">
				AND a.productline_id = #{line.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BaseClassGroup" >
		SELECT 
			<include refid="baseClassGroupColumns"/>
		FROM base_class_group a
		<include refid="baseClassGroupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO base_class_group(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			code,
			name,
			leader_id,
			leader_code,
			factory_id,
			workshop_id,
			productline_id,
			remarks
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{code},
			#{name},
			#{leader.id},
			#{leadercode},
			#{factory.id},
			#{workshop.id},
			#{line.id},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE base_class_group SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			code = #{code},
			name = #{name},
			leader_id = #{leader.id},
			leader_code = #{leadercode},
			factory_id = #{factory.id},
			workshop_id = #{workshop.id},
			productline_id = #{line.id},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM base_class_group
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE base_class_group SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BaseClassGroup" statementType="STATEMENT">
		select * FROM base_class_group  where ${propertyName} = '${value}'
	</select>
	
</mapper>