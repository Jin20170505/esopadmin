<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.qiyewx.base.mapper.QiYeWxEmployeeMapper">
    
	<sql id="qiYeWxEmployeeColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.main_dept AS "mainDept.id",
		a.name AS "name",
		a.userid AS "userid",
		a.deptment_ids AS "deptmentids",
		a.position AS "position",
		a.mobile AS "mobile",
		a.gender AS "gender",
		a.email AS "email",
		a.avatar AS "avatar",
		a.thumb_avatar AS "thumbvatar",
		a.telephone AS "telephone",
		a.alias AS "alias",
		a.openid AS "openid",
		a.status AS "status",
		a.tag AS "tag",
		b.name AS "mainDept.name"
	</sql>
	
	<sql id="qiYeWxEmployeeJoins">
			LEFT JOIN qiyewx_dept b ON b.id = a.main_dept
	</sql>
	
    
	<select id="get" resultType="QiYeWxEmployee" >
		SELECT 
			<include refid="qiYeWxEmployeeColumns"/>
		FROM qiyewx_employee a
		<include refid="qiYeWxEmployeeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getIdByNameLast" resultType="String">
		select id from qiyewx_employee where name = #{name}
		<if test="dept!=null and dept !='' ">
			and main_dept = #{dept}
		</if>
		order by id desc  limit 1;
	</select>

	<select id="findList" resultType="QiYeWxEmployee" >
		SELECT 
			<include refid="qiYeWxEmployeeColumns"/>
		FROM qiyewx_employee a
		<include refid="qiYeWxEmployeeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
                    <if test="mainDept != null  and mainDept.id != null and mainDept.id != ''">
                        AND (a.main_dept = #{mainDept.id} OR a.deptment_ids LIKE CONCAT('%,', #{mainDept.id}, ',%'))
                    </if>
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
			<if test="userid != null and userid != ''">
				AND a.userid = #{userid}
			</if>
			<if test="mobile != null and mobile != ''">
				AND a.mobile LIKE concat('%',#{mobile},'%')
			</if>
			<if test="gender != null and gender != ''">
				AND a.gender = #{gender}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.userid ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="QiYeWxEmployee" >
		SELECT 
			<include refid="qiYeWxEmployeeColumns"/>
		FROM qiyewx_employee a
		<include refid="qiYeWxEmployeeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>

	<insert id="batchInsert" parameterType="java.util.List">
INSERT INTO qiyewx_employee(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			main_dept,
			name,
			userid,
			deptment_ids,
			position,
			mobile,
			gender,
			email,
			avatar,
			thumb_avatar,
			telephone,
			alias,
			status
		) VALUES
		<foreach collection="list" separator="," item="item">
			(
			#{item.userid},
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag},
			#{item.remarks},
			#{item.name},
			#{item.userid},
			#{item.deptmentids},
			#{item.position},
			#{item.mobile},
			#{item.gender},
			#{item.email},
			#{item.avatar},
			#{item.thumbvatar},
			#{item.telephone},
			#{item.alias},
			#{item.status}
			)
		</foreach>
		on duplicate key update
		id = values(id),
		main_dept= VALUES(main_dept),
		name=VALUES(name),
		userid=VALUES(userid),
		deptment_ids=VALUES(deptment_ids),
		position=VALUES(position),
		mobile=VALUES(mobile),
		gender=VALUES(gender),
		email=VALUES(email),
		avatar=VALUES(avatar),
		thumb_avatar=VALUES(thumb_avatar),
		telephone=VALUES(telephone),
		alias=VALUES(alias)
	</insert>
	<insert id="insert">
		INSERT INTO qiyewx_employee(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			main_dept,
			name,
			userid,
			deptment_ids,
			position,
			mobile,
			gender,
			email,
			avatar,
			thumb_avatar,
			telephone,
			alias,
			status
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{mainDept.id},
			#{name},
			#{userid},
			#{deptmentids},
			#{position},
			#{mobile},
			#{gender},
			#{email},
			#{avatar},
			#{thumbvatar},
			#{telephone},
			#{alias},
			#{status}
		)
	</insert>
	
	<update id="update">
		UPDATE qiyewx_employee SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			main_dept = #{mainDept.id},
			name = #{name},
			userid = #{userid},
			deptment_ids = #{deptmentids},
			position = #{position},
			mobile = #{mobile},
			gender = #{gender},
			email = #{email},
			avatar = #{avatar},
			thumb_avatar = #{thumbvatar},
			telephone = #{telephone},
			alias = #{alias},
			status = #{status}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM qiyewx_employee
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE main_dept = #{mainDept.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE qiyewx_employee SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE main_dept = #{mainDept.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="QiYeWxEmployee" statementType="STATEMENT">
		select * FROM qiyewx_employee  where ${propertyName} = '${value}'
	</select>
	
</mapper>