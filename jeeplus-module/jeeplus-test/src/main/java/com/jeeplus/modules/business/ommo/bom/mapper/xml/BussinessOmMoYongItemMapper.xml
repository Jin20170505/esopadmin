<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.business.ommo.bom.mapper.BussinessOmMoYongItemMapper">
    
	<sql id="bussinessOmMoYongItemColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.ommohid AS "ommo.id",
		a.no AS "no",
		a.ck AS "ck.id",
		a.hw AS "hw.id",
		a.cinvcode AS "cinvcode",
		a.cinvname AS "cinvname",
		a.cinvstd AS "cinvstd",
		a.batchno AS "batchno",
		a.num AS "num",
		a.unit AS "unit",
		a.requireddate AS "requireddate",
		ck.name AS "ck.name",
		hw.code AS "hw.code",
		hw.name AS "hw.name"
	</sql>
	
	<sql id="bussinessOmMoYongItemJoins">
		LEFT JOIN base_cangku ck ON ck.id = a.ck
		LEFT JOIN base_huowei hw ON hw.id = a.hw
	</sql>
	
    
	<select id="get" resultType="BussinessOmMoYongItem" >
		SELECT 
			<include refid="bussinessOmMoYongItemColumns"/>
		FROM business_om_moyongliao_item a
		<include refid="bussinessOmMoYongItemJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BussinessOmMoYongItem" >
		SELECT 
			<include refid="bussinessOmMoYongItemColumns"/>
		FROM business_om_moyongliao_item a
		<include refid="bussinessOmMoYongItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="ommo != null and ommo.id != null and ommo.id != ''">
				AND a.ommohid = #{ommo.id}
			</if>
		</where>
		ORDER BY a.no ASC
	</select>
	
	<select id="findAllList" resultType="BussinessOmMoYongItem" >
		SELECT 
			<include refid="bussinessOmMoYongItemColumns"/>
		FROM business_om_moyongliao_item a
		<include refid="bussinessOmMoYongItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.no ASC
			</otherwise>
		</choose>
	</select>

	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO business_om_moyongliao_item(
		id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag,
		ommohid,
		no,
		ck,
		hw,
		cinvcode,
		cinvname,
		cinvstd,
		batchno,
		num,
		unit,
		requireddate
		) VALUES
		<foreach collection="list" separator="," item="item">
			(
			#{item.id},
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag},
			#{item.ommo.id},
			#{item.no},
			#{item.ck.id},
			#{item.hw.id},
			#{item.cinvcode},
			#{item.cinvname},
			#{item.cinvstd},
			#{item.batchno},
			#{item.num},
			#{item.unit},
			#{item.requireddate}
			)
		</foreach>
		on duplicate key update
		id = values(id),
		update_date= VALUES(update_date),
		ck = values(ck),
		hw = values(hw),
		no=VALUES(no),
		cinvcode=VALUES(cinvcode),
		cinvname=VALUES(cinvname),
		cinvstd=VALUES(cinvstd),
		num=VALUES(num),
		unit=VALUES(unit),
		requireddate=VALUES(requireddate)
	</insert>
	<insert id="insert">
		INSERT INTO business_om_moyongliao_item(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			ommohid,
			no,
			ck,
			hw,
			cinvcode,
			cinvname,
			cinvstd,
			batchno,
			num,
			unit,
			requireddate
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{ommo.id},
			#{no},
			#{ck.id},
			#{hw.id},
			#{cinvcode},
			#{cinvname},
			#{cinvstd},
			#{batchno},
			#{num},
			#{unit},
			#{requireddate}
		)
	</insert>
	
	<update id="update">
		UPDATE business_om_moyongliao_item SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			ommohid = #{ommo.hid},
			no = #{no},
			ck = #{ck.id},
			hw = #{hw.id},
			cinvcode = #{cinvcode},
			cinvname = #{cinvname},
			cinvstd = #{cinvstd},
			batchno = #{batchno},
			num = #{num},
			unit = #{unit},
			requireddate = #{requireddate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM business_om_moyongliao_item
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE ommohid = #{ommo.hid}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE business_om_moyongliao_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE ommohid = #{ommo.hid}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BussinessOmMoYongItem" statementType="STATEMENT">
		select * FROM business_om_moyongliao_item  where ${propertyName} = '${value}'
	</select>
	
</mapper>